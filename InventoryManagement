import java.util.Scanner;



public class Main {

    public static void main(String[] args) {

        InventoryManager manager = new InventoryManager();

        Scanner input = new Scanner(System.in);



        System.out.println("Welcome to the Grocery Store Inventory Management System");



        while (true) {

            System.out.println("\nChoose an option:");

            System.out.println("1. Add a Product");

            System.out.println("2. Display Inventory");

            System.out.println("3. Update Product Price");

            System.out.println("4. Restock Product");

            System.out.println("0. Exit");



            try {

                int choice = input.nextInt();

                input.nextLine(); // Clear newline



                switch (choice) {

                    case 1:

                        addProduct(manager, input);

                        break;

                    case 2:

                        manager.displayInventory();

                        break;

                    case 3:

                        updatePrice(manager, input);

                        break;

                    case 4:

                        restock(manager, input);

                        break;

                    case 0:

                        System.out.println("Exiting system. Goodbye!");

                        input.close();

                        return;

                    default:

                        System.out.println("Invalid option. Please try again.");

                }

            } catch (Exception e) {

                System.out.println("Invalid input. Please try again.");

                input.nextLine(); // Clear invalid input

            }

        }

    }



    private static void addProduct(InventoryManager manager, Scanner input) {

        System.out.print("Enter product name: ");

        String name = input.nextLine();



        System.out.print("Enter category (Fresh, Dairy, Snacks, Pulses, Oils, Spices, Drinks): ");

        String category = input.nextLine();



        System.out.print("Enter quantity: ");

        int quantity = input.nextInt();



        System.out.print("Enter price: ");

        double price = input.nextDouble();

        input.nextLine(); // Clear newline



        System.out.print("Enter expiry date (yyyy-MM-dd): ");

        String expiryDate = input.nextLine();



        manager.addProduct(name, category, quantity, price, expiryDate);

    }



    private static void updatePrice(InventoryManager manager, Scanner input) {

        System.out.print("Enter the product name to update price: ");

        String name = input.nextLine();



        System.out.print("Enter the new price: ");

        double newPrice = input.nextDouble();

        input.nextLine(); // Clear newline



        manager.updatePrice(name, newPrice);

    }



    private static void restock(InventoryManager manager, Scanner input) {

        System.out.print("Enter the product name to restock: ");

        String name = input.nextLine();



        System.out.print("Enter the quantity to add: ");

        int amount = input.nextInt();

        input.nextLine(); // Clear newline



        manager.restockProduct(name, amount);

    }

}

public interface InventoryActions {

    void addProduct(String name, String category, int quantity, double price, String expiryDate);

    void displayInventory();

    void updatePrice(String name, double newPrice);

    void restockProduct(String name, int amount);


}

import java.time.LocalDate;

import java.time.format.DateTimeFormatter;



public abstract class Product {

    private String name;

    private int quantity;

    private double price;

    private LocalDate expiryDate;



    public Product(String name, int quantity, double price, String expiryDate) {

        this.name = name;

        this.quantity = quantity;

        this.price = price;

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        this.expiryDate = LocalDate.parse(expiryDate, formatter);

    }



    public String getName() {

        return name;

    }



    public int getQuantity() {

        return quantity;

    }



    public double getPrice() {

        return price;

    }



    public LocalDate getExpiryDate() {

        return expiryDate;

    }



    public void addStock(int amount) {

        this.quantity += amount;

    }



    public void updatePrice(double newPrice) {

        this.price = newPrice;

    }



    public boolean needsRestock() {

        return quantity < 5;

    }



    public boolean isExpired() {

        return LocalDate.now().isAfter(expiryDate);

    }



    public abstract void displayProductInfo();

}



public class FreshProduct extends Product {

    public FreshProduct(String name, int quantity, double price, String expiryDate) {

        super(name, quantity, price, expiryDate);

    }



    @Override

    public void displayProductInfo() {

        System.out.println("Fresh Product - Name: " + getName() + ", Quantity: " + getQuantity() + ", Price: $" + getPrice() + ", Expiry Date: " + getExpiryDate());

    }

}

